{"version":3,"sources":["history.ts","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["createHistory","basename","process","imageUrlWithId","recipeId","toString","durationRangeToRange","dr","mx","res","min","max","rangeToDurationRange","r","Object","assign","undefined","serializeDurationRange","deserializeDurationRange","s","p","split","length","Number","parseInt","matchDuration","n","crit","describeDuration","AppNavbar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","react","Navbar","color","sticky","light","expand","NavbarBrand","Link","to","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","href","setState","React","IngredientRow","Badge","ing","marking","name","detail","amount","RecipeDetail","recipe","recipes","recipeWithId","match","params","id","Row","Col","src","title","comment","fa","prep_duration","cook_duration","kind","difficulty","genre","go","calorie","md","lg","yield","Table","hover","size","ingredients","map","i","App_IngredientRow","key","instructions","RecipeItem","Card","CardImg","top","width","CardBody","CardTitle","CardText","CheckBoxRow","_this2","_this3","xs","Label","values","val","FormGroup","inline","check","Input","type","value","checked","indexOf","e","currentTarget","idx","cb","key_","update","$splice","$push","SliderRow","_this4","handleChange","format","js_default","a","formatLabel","range","minValue","maxValue","onChange","concat","unit","value2ingredientItem","Map","forEach","group","options","item","set","Sidebar","_this5","GENRES","DIFFICULTY","KIND","query","queryOption2selectOption","onSubmit","handleRange","handleSelectChange","shouldCreateEnabled","createNewOption","filter","k","v","$merge","defineProperty","newValue","actionMeta","console","log","action","inputValue","selectValue","optionLabel","option","RegExp","test","get","_this$state","Form","row","for","hidden","placeholder","keyword","App_CheckBoxRow","App_SliderRow","prepDuration","cookDuration","Creatable_default","isClearable","isSearchable","isMulti","closeMenuOnSelect","getOptionLabel","x","getOptionValue","formatGroupLabel","isValidNewOption","getNewOptionData","filterOption","Button","selectOption2queryOption","q","join","excludeIngredients","queryString","serializeSearchQuery","history","push","preventDefault","SearchResult","withRouter","urlQuery","deserializeSearchQuery","location","search","results","includes","_ret","ings","Set","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","some","has","err","return","shouldContain","App_Sidebar","describeSearchQuery","CardColumns","App_RecipeItem","App","Router","App_AppNavbar","Container","fluid","Route","exact","path","component","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","src_App_0","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b1c3f497.chunk.js","sourcesContent":["import createHistory from 'history/createBrowserHistory';\nexport default createHistory({basename: process.env.PUBLIC_URL});\n","import * as React from 'react';\nimport { Router, Route, Link, RouteComponentProps, withRouter } from 'react-router-dom';\nimport { Container, Form, FormGroup, Label, FormText, Input, Row, Col, NavbarBrand, Navbar, NavbarToggler, Collapse, Nav, NavItem, NavLink, Card, CardImg, CardTitle, CardBody, CardColumns, CardText, Table, Badge, Button } from 'reactstrap';\nimport { FaClock, FaUtensils, FaTachometerAlt, FaFlagCheckered, FaHourglass } from 'react-icons/fa';\nimport { GoFlame } from 'react-icons/go';\nimport InputRange from 'react-input-range';\nimport CreatableSelect from 'react-select/lib/Creatable';\nimport * as queryString from 'query-string';\nimport update from 'immutability-helper';\nimport './App.css';\nimport recipes from './recipes.json';\nimport ingredients from './ingredients.json';\nimport history from './history';\nimport 'react-input-range/lib/css/index.css';\n\nconst recipeWithId = (recipeId: number) => recipes[recipeId - 1429];\nconst imageUrlWithId = (recipeId: number) => process.env.PUBLIC_URL + '/imgs/' + recipeId.toString() + '.jpg';\n\n\ninterface Ingredient {\n  name: string;\n  detail?: string;\n  amount?: string;\n  marking?: string;\n}\n  \ninterface Recipe {\n  id: number;\n  title: string;\n  cook_duration: number;\n  calorie: number;\n  genre: string;\n  kind: string;\n  difficulty: string;\n  prep_duration: number;\n  comment: string;\n  ingredients: Ingredient[]\n  yield: number;\n  instructions: string[]\n}\n\n\ninterface IngredientItem {\n  value: string;\n  kana?: string;\n  alt?: string[];\n}\n\n\ninterface DurationRange {\n  min?: number;\n  max?: number;\n}\n\nfunction durationRangeToRange(dr: DurationRange | undefined, mx: number) {\n  let res = { min: 0, max: mx };\n  if (!dr) { return res; }\n  if (dr.max) { res.max = dr.max; }\n  if (dr.min) { res.min = dr.min; }\n  return res;\n}\n\nfunction rangeToDurationRange(r: DurationRange, mx: number): DurationRange {\n  let res: DurationRange = Object.assign(r);\n  if (res.min === 0) { res.min = undefined; }\n  if (res.max === mx) { res.max = undefined; }\n  return res;\n}\n\nfunction serializeDurationRange(dr: DurationRange): string {\n  let res = ''\n  if (dr.min) { res += dr.min.toString(); }\n  res += '-';\n  if (dr.max) { res += dr.max.toString(); }\n  return res;\n}\n\nfunction deserializeDurationRange(s: string): DurationRange {\n  let res: DurationRange = {};\n  const p = s.split('-');\n  if (p[0].length > 0) { res.min = Number.parseInt(p[0]); }\n  if (p[1].length > 0) { res.max = Number.parseInt(p[1]); }\n  return res;\n}\n\nfunction matchDuration(n: number, crit: DurationRange) {\n  if (crit.min && n < crit.min) { return false; }\n  if (crit.max && n > crit.max) { return false; }\n  return true;\n}\n\nfunction describeDuration(dr: DurationRange) {\n  let res = '';\n  if (dr.min) { res += dr.min.toString(); }\n  res += '～';\n  if (dr.max) { res += dr.max.toString(); }\n  res += '分';\n  return res;\n}\n\ninterface SearchQuery {\n  keyword?: string;\n  genre?: string[];\n  kind?: string[];\n  difficulty?: string[];\n  cookDuration?: DurationRange;\n  prepDuration?: DurationRange;\n  ingredients?: string[];\n  excludeIngredients?: string[];\n}\n\nfunction deserializeSearchQuery(urlQuery: string): SearchQuery {\n  const p = queryString.parse(urlQuery) as any;\n  let res: SearchQuery = {}\n  if ('kw' in p) { res.keyword = p['kw']; }\n  if ('g' in p) { res.genre = p['g'].split(','); }\n  if ('k' in p) { res.kind = p['k'].split(','); }\n  if ('d' in p) { res.difficulty = p['d'].split(','); }\n  if ('cd' in p) { res.cookDuration = deserializeDurationRange(p['cd']); }\n  if ('pd' in p) { res.prepDuration = deserializeDurationRange(p['pd']); }\n  if ('i' in p) { res.ingredients = p['i'].split(','); }\n  if ('ei' in p) { res.excludeIngredients = p['ei'].split(','); }\n  return res;\n}\n\n\nfunction serializeSearchQuery(q: SearchQuery): string {\n  let res = {};\n  if (q.keyword && q.keyword.length > 0) { res['kw'] = q.keyword; }\n  if (q.genre && q.genre.length > 0) { res['g'] = q.genre.join(','); }\n  if (q.kind && q.kind.length > 0) { res['k'] = q.kind.join(','); }\n  if (q.difficulty && q.difficulty.length > 0) { res['d'] = q.difficulty.join(','); }\n  if (q.cookDuration && serializeDurationRange(q.cookDuration) !== '-') { res['cd'] = serializeDurationRange(q.cookDuration); }\n  if (q.prepDuration && serializeDurationRange(q.prepDuration) !== '-') { res['pd'] = serializeDurationRange(q.prepDuration); }\n  if (q.ingredients) { res['i'] = q.ingredients.join(','); }\n  if (q.excludeIngredients) { res['ei'] = q.excludeIngredients.join(','); }\n  return queryString.stringify(res);\n}\n\nfunction describeSearchQuery(q: SearchQuery): string {\n  let p = [];\n  if (q.keyword) { p.push('キーワード：\"' + q.keyword + '\"'); }\n  if (q.genre) { p.push('ジャンル：' + q.genre.join('，')); }\n  if (q.kind) { p.push('種類：' + q.kind.join('，')); }\n  if (q.difficulty) { p.push('難易度：' + q.difficulty.join('，')); }\n  if (q.cookDuration) { p.push('加熱時間：' + describeDuration(q.cookDuration)); }\n  if (q.prepDuration) { p.push('準備時間：' + describeDuration(q.prepDuration)); }\n  if (q.ingredients) { p.push('材料：' + q.ingredients.join('，')); }\n  if (q.excludeIngredients) { p.push('使わない材料：' + q.excludeIngredients.join('，')); }\n  return p.join('　');\n}\n\nfunction shouldContain(q: SearchQuery, r: Recipe): boolean {\n  if (q.keyword && !r.title.includes(q.keyword) && !r.comment.includes(q.keyword)) { return false; }\n  if (q.difficulty && q.difficulty.indexOf(r.difficulty) === -1) { return false; }\n  if (q.genre && q.genre.indexOf(r.genre) === -1) { return false; }\n  if (q.kind && q.kind.indexOf(r.kind) === -1) { return false; }\n  if (q.cookDuration && !matchDuration(r.cook_duration, q.cookDuration)) { return false; }\n  if (q.prepDuration && !matchDuration(r.prep_duration, q.prepDuration)) { return false; }\n  if (q.ingredients || q.excludeIngredients) {\n    const ings = new Set(r.ingredients.map((ing) => ing.name));\n    if (q.ingredients) {\n      for (const candsStr of q.ingredients) {\n        const cands = candsStr.split('|');\n        if (!cands.some((s) => ings.has(s))) { return false; }\n      }\n    }\n    if (q.excludeIngredients) {\n      if (q.excludeIngredients.some((s) => ings.has(s))) { return false; }\n    }\n  }\n  return true;\n}\n\nclass AppNavbar extends React.Component<{}, { isOpen: boolean }> {\n  constructor(props: {}) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = { isOpen: false }\n  }\n  public render() {\n    return (\n      <Navbar color=\"light\" sticky=\"top\" light expand=\"sm\">\n        <NavbarBrand><Link to='/'>C4M-E Recipes</Link></NavbarBrand>\n        <NavbarToggler onClick={this.toggle} />\n        <Collapse isOpen={this.state.isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem><NavLink href=\"/?k=前菜\">前菜</NavLink></NavItem>\n            <NavItem><NavLink href=\"/?k=メインディッシュ\">メインディッシュ</NavLink></NavItem>\n            <NavItem><NavLink href=\"/?k=デザート\">デザート</NavLink></NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n\n  private toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n}\n\nconst IngredientRow = (props: { ing: Ingredient }) => {\n  return (<tr><td><Badge color=\"secondary\">{props.ing.marking}</Badge></td><td>{props.ing.name}</td><td>{props.ing.detail}</td><td>{props.ing.amount}</td></tr>);\n}\n\nconst RecipeDetail = (props: RouteComponentProps<{ id: string }>) => {\n  const recipeId = parseInt(props.match.params.id);\n  const recipe = recipeWithId(recipeId);\n  return (\n    <div>\n      <Row>\n        <Col>\n          <img className=\"rounded wide-float-right\" src={imageUrlWithId(recipe.id)} />\n          <h1 className=\"h3\">{recipe.title}</h1>\n          <p className=\"lead\">{recipe.comment}</p>\n          <p>\n            <FaClock />時間：{recipe.prep_duration + recipe.cook_duration}分（準備{recipe.prep_duration}分、加熱{recipe.cook_duration}分）<br />\n            <FaUtensils />種類：{recipe.kind}<br />\n            <FaTachometerAlt />難易度：{recipe.difficulty}<br />\n            <FaFlagCheckered />ジャンル：{recipe.genre}<br />\n            <GoFlame />カロリー：{recipe.calorie}kcal\n          </p>\n        </Col>\n      </Row>\n      <Row className=\"mt-3\">\n        <Col md=\"6\" lg=\"5\">\n          <h3 className=\"mb-3\">材料（{recipe.yield}人分）</h3>\n          <Table hover size=\"sm\">\n            <tbody>\n              {recipe.ingredients.map((ing, i) => {\n                return <IngredientRow key={i} ing={ing} />;\n              })}\n            </tbody>\n          </Table>\n        </Col>\n        <Col md=\"6\" lg=\"7\">\n          <h3>手順</h3>\n          <ol className=\"instructions\">\n            {recipe.instructions.map((s, i) => {\n              return <li key={i}>{s}</li>\n            })}\n          </ol>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nconst RecipeItem = (props: { r: Recipe }) => (\n  <Card>\n    <CardImg top width=\"100%\" src={imageUrlWithId(props.r.id)} />\n    <CardBody>\n      <CardTitle><Link to={'/detail/' + props.r.id.toString()}>{props.r.title}</Link></CardTitle>\n      <CardText>{props.r.comment}</CardText>\n      <CardText>\n        <FaClock />準備時間：{props.r.prep_duration}分<br />\n        <FaHourglass />加熱時間：{props.r.cook_duration}分<br />\n        <FaUtensils />種類：{props.r.kind}<br />\n        <FaTachometerAlt />難易度：{props.r.difficulty}<br />\n        <FaFlagCheckered />ジャンル：{props.r.genre}<br />\n        <GoFlame />カロリー：{props.r.calorie}kcal\n      </CardText>\n    </CardBody>\n  </Card>\n);\n\ninterface CheckBoxRowProps {\n  key_: string;\n  title: string;\n  values: string[];\n  checked: string[] | undefined;\n  cb: (k: string, v: ReadonlyArray<string>) => void;\n}\n\nclass CheckBoxRow extends React.Component<CheckBoxRowProps, {}> {\n  constructor(props: CheckBoxRowProps) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  public render() {\n    return (\n      <Row>\n        <Col xs={4}><Label>{this.props.title}</Label>\n        </Col>\n        <Col>\n          {this.props.values.map((val, i) => {\n            return (\n              <FormGroup inline check key={i}>\n                <Label check><Input type=\"checkbox\" value={val} checked={this.props.checked !== undefined && this.props.checked.indexOf(val) !== -1} onClick={this.onClick} />{val}</Label>\n              </FormGroup>\n            );\n          })}\n        </Col>\n      </Row>\n    );\n  }\n\n  private onClick(e: React.FormEvent<HTMLInputElement>) {\n    const val = e.currentTarget.value;\n    const checked = this.props.checked !== undefined ? this.props.checked : [];\n    const idx = checked.indexOf(val);\n    if (idx !== -1) {\n      this.props.cb(this.props.key_, update(checked, { $splice: [[idx, 1]] }));\n    } else {\n      this.props.cb(this.props.key_, update(checked, { $push: [val] }));\n    }\n  }\n}\n\ninterface SliderRowProps {\n  key_: string;\n  title: string;\n  unit: string;\n  max: number;\n  range?: DurationRange;\n  cb: (k: string, v: DurationRange) => void;\n}\n\nclass SliderRow extends React.Component<SliderRowProps> {\n\n  constructor(props: SliderRowProps) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.format = this.format.bind(this);\n  }\n\n  public render() {\n    return (\n      <Row>\n        <Col xs={4}><Label>{this.props.title}</Label>\n        </Col>\n        <Col>\n          <InputRange formatLabel={this.format} value={durationRangeToRange(this.props.range, this.props.max)} minValue={0} maxValue={this.props.max} onChange={this.handleChange} />\n        </Col>\n      </Row>\n    )\n  }\n\n  private format(value: number) {\n    return `${value}${this.props.unit}`;\n  }\n\n  private handleChange(value: any) {\n    this.props.cb(this.props.key_, rangeToDurationRange(value, this.props.max));\n  }\n\n}\n\ninterface SidebarContext {\n  query: SearchQuery;\n  options: IngredientItem[];\n}\n\nconst value2ingredientItem = new Map<string, IngredientItem>();\ningredients.forEach((group) => group.options.forEach((item) => value2ingredientItem.set(item.value, item)));\n\nclass Sidebar extends React.Component<{ query: SearchQuery }, SidebarContext> {\n  private readonly GENRES = { key_: 'genre', title: 'ジャンル', values: ['エスニック', '和風', '洋風', '中華風', 'フレンチ'] };\n  private readonly DIFFICULTY = { key_: 'difficulty', title: '難易度', values: ['簡単', '普通'] };\n  private readonly KIND = { key_: 'kind', title: '種類', values: ['前菜', 'メインディッシュ', 'デザート'] };\n\n  constructor(props: { query: SearchQuery } ) {\n    super(props);\n    this.state = { query: Object.assign({}, props.query), options: this.queryOption2selectOption(props.query.ingredients) };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleRange = this.handleRange.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.shouldCreateEnabled = this.shouldCreateEnabled.bind(this);\n    this.createNewOption = this.createNewOption.bind(this);\n    this.filter = this.filter.bind(this);\n    this.cb = this.cb.bind(this);\n  }\n\n  public cb(k: string, v: any) {\n    // console.log(k, v);\n    this.setState({ query: update(this.state.query, {$merge: { [k]: v }})});\n  }\n\n  public handleSelectChange(newValue: any, actionMeta: any) {\n    console.log(newValue);\n    console.log(actionMeta.action);\n    if (actionMeta.action === 'select-option' || actionMeta.action === 'remove-value' || actionMeta.action === 'clear' || actionMeta.action === 'create-option') {\n      this.setState( { options: newValue } );\n    }\n  }\n\n  public shouldCreateEnabled(inputValue: string, selectValue: any, options: any) {\n    if (!inputValue) { return false; }\n    // FIXME: return false if input value has no regex-match to options\n    return true;\n  }\n\n  public createNewOption(inputValue: string, optionLabel: React.ReactNode) {\n    console.log(inputValue, optionLabel);\n    // FIXME: regex -> '|' delimited list of string\n    return { value: inputValue }; // '青ねぎ|青しそ';\n  }\n\n  public filter(option: any, inputValue: string) {\n    const re = RegExp(inputValue);\n    return re.test(option.value);\n  }\n\n  public queryOption2selectOption(options: string[] | undefined): IngredientItem[] {\n    if (!options) {\n      return [];\n    }\n    function notUndefined<T>(v: T | undefined): v is T { return v !== undefined; }\n    return options.map(v => value2ingredientItem.get(v)).filter(notUndefined);\n  }\n\n  public selectOption2queryOption(options: IngredientItem[]) {\n    if (options.length === 0) {\n      return undefined;\n    }\n    return options.map(v => v.value);\n  }\n\n  public render() {\n    const {query, options} = this.state;\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <FormGroup row>\n          <Label for=\"keyword\" hidden={true}>キーワード</Label>\n          <Input className=\"m-2\" type=\"text\" name=\"keyword\" id=\"keyword\" placeholder=\"キーワード\" value={query.keyword} onChange={this.handleChange} />\n        </FormGroup>\n        <CheckBoxRow {...this.GENRES} checked={query.genre} cb={this.cb} />\n        <CheckBoxRow {...this.DIFFICULTY} checked={query.difficulty} cb={this.cb} />\n        <CheckBoxRow {...this.KIND} checked={query.kind} cb={this.cb} />\n        <SliderRow key_=\"prepDuration\" title=\"準備時間\" unit=\"分\" max={75} range={query.prepDuration} cb={this.cb} />\n        <SliderRow key_=\"cookDuration\" title=\"加熱時間\" unit=\"分\" max={35} range={query.cookDuration} cb={this.cb} />\n        <CreatableSelect<IngredientItem>\n          isClearable\n          isSearchable\n          isMulti\n          closeMenuOnSelect={false}\n          onChange={this.handleSelectChange}\n          options={ingredients}\n          getOptionLabel={ (x: IngredientItem) => x.value }\n          getOptionValue={ (x: IngredientItem) => x.value }\n          formatGroupLabel={ (x) => (<p>{x['genre']}</p>) }\n          value={options}\n          isValidNewOption={this.shouldCreateEnabled}\n          getNewOptionData={this.createNewOption}\n          filterOption={this.filter}\n        />\n        <Button type=\"submit\">検索</Button>\n      </Form>\n    )\n  }\n\n  private handleRange(key: string, mx: number, value: DurationRange) {\n    console.log(key, mx, value, this.state);\n    this.cb(key, rangeToDurationRange(value, mx));\n  }\n\n  private handleChange(e: React.FormEvent<HTMLInputElement>) {\n    this.cb(e.currentTarget.name, e.currentTarget.value);\n  }\n\n  private onSubmit(e: React.FormEvent<HTMLFormElement>) {\n    let query = this.state.query;\n    query.ingredients = this.selectOption2queryOption(this.state.options);\n    const q = serializeSearchQuery(query);\n    history.push('/?' + q);\n    e.preventDefault();\n  }\n}\n\nconst SearchResult = withRouter((props: RouteComponentProps<{}>) => {\n  const q = deserializeSearchQuery(props.location.search);\n  const results = recipes.filter((r) => shouldContain(q, r));\n  return (\n    <Row className=\"page-row\">\n      <Col md=\"3\" className=\"sidebar\">\n        <Sidebar query={q} />\n      </Col>\n      <Col md=\"9\" className=\"results\">\n        <h2>{describeSearchQuery(q)}</h2>\n        <CardColumns>\n          {results.map((recipe) => {\n            return <RecipeItem r={recipe} key={recipe.id} />;\n          })}\n        </CardColumns>\n      </Col>\n    </Row>\n  );\n});\n\nclass App extends React.Component {\n  public render() {\n    return (\n      <Router history={history}>\n        <div>\n          <AppNavbar />\n          <Container fluid={true}>\n            <Route exact path=\"/\" component={SearchResult} />\n            <Route path=\"/detail/:id\" component={RecipeDetail} />\n          </Container>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}